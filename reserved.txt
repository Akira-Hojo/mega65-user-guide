END         ;$80
FOR         ;$81
NEXT        ;$82
DATA        ;$83
INPUT#      ;$84
INPUT       ;$85
DIM         ;$86
READ        ;$87
LET         ;$88
GOTO        ;$89
RUN         ;$8A
IF          ;$8B
RESTORE     ;$8C
GOSUB       ;$8D
RETURN      ;$8E
REM         ;$8F

STOP        ;$90
ON          ;$91
WAIT        ;$92
LOAD        ;$93
SAVE        ;$94
VERIFY      ;$95
DEF         ;$96
POKE        ;$97
PRINT#      ;$98
PRINT       ;$99
CONT        ;$9A
LIST        ;$9B
CLR         ;$9C
CMD         ;$9D
SYS         ;$9E
OPEN        ;$9F

CLOSE       ;$A0
GET         ;$A1
NEW         ;$A2
TAB(        ;$A3
TO          ;$A4
FN          ;$A5
SPC(        ;$A6
THEN        ;$A7
NOT         ;$A8
STEP        ;$A9
+           ;$AA
-           ;$AB
*           ;$AC
/           ;$AD
^           ;$AE
AND         ;$AF

OR          ;$B0
>           ;$B1
=           ;$B2
<           ;$B3
SGN         ;$B4 functions
INT         ;$B5 =========
ABS         ;$B6 absolute
USR         ;$B7 user function
FRE         ;$B8 free bytes of bank
POS         ;$B9 cursor column
SQR         ;$BA square root
RND         ;$BB random
LOG         ;$BC natural logarithm
EXP         ;$BD exponential function
COS         ;$BE cosine
SIN         ;$BF sine

TAN         ;$C0 tangent
ATN         ;$C1 arcus tangent
PEEK        ;$C2 memory read
LEN         ;$C3 length of string
STR$        ;$C4 value to string
VAL         ;$C5 string to value
ASC         ;$C6 character to code
CHR$        ;$C7 code to character
LEFT$       ;$C8 copy from left
RIGHT$      ;$C9 copy from right
MID$        ;$CA copy from middle
GO          ;$CB
RGRAPHIC    ;$CC was 'rgr'
RCOLOR      ;$CD was 'rclr'
JOY         ;$CF

RPEN        ;$D0
DEC         ;$D1
HEX$        ;$D2
ERR$        ;$D3
INSTR       ;$D4
ELSE        ;$D5
RESUME      ;$D6
TRAP        ;$D7
TRON        ;$D8
TROFF       ;$D9
SOUND       ;$DA
VOL         ;$DB
AUTO        ;$DC
PUDEF       ;$DD
GRAPHIC     ;$DE
PAINT       ;$DF

CHAR        ;$E0
BOX         ;$E1
CIRCLE      ;$E2
PASTE       ;$E3
CUT         ;$E4
LINE        ;$E5
MERGE       ;$E6
COLOR       ;$E7
SCNCLR      ;$E8
XOR         ;$E9
HELP        ;$EA
DO          ;$EB
LOOP        ;$EC
EXIT        ;$ED
DIR         ;$EE
DSAVE       ;$EF

DLOAD       ;$F0
HEADER      ;$F1
SCRATCH     ;$F2
COLLECT     ;$F3
COPY        ;$F4
RENAME      ;$F5
BACKUP      ;$F6
DELETE      ;$F7
RENUMBER    ;$F8
KEY         ;$F9
MONITOR     ;$FA
USING       ;$FB
UNTIL       ;$FC
WHILE       ;$FD

prefix      ;$FE

BANK        ;$02: set bank number
FILTER      ;$03: set up filter
PLAY        ;$04: play a tune
TEMPO       ;$05: set rate for playing
MOVSPR      ;$06: sprite position/movement
SPRITE      ;$07: turn on/set up sprite
SPRCOLOR    ;$08: set sprite multicolor registers
RREG        ;$09: retreive register values after 'SYS'
ENVELOPE    ;$0A: set up SID envelopes
SLEEP       ;$0B: delay
CATALOG     ;$0C: disk directory
DOPEN       ;$0D: open a disk file
APPEND      ;$0E: open a disk file for appending
DCLOSE      ;$0F: close a file opened w/ DOPEN
BSAVE       ;$10: binary (non-program) save
BLOAD       ;$11: binary load
RECORD      ;$12: position at record in REL file
CONCAT      ;$13: concatenate 2 files
DVERIFY     ;$14: verify a saved program
DCLEAR      ;$15: re-initialize a drive
SPRSAV      ;$16: sprite/string to sprite/string
COLLISION   ;$17: set traps for sprite & light pen collisions
BEGIN       ;$18: mark start of a b-block
BEND        ;$19: ..and its end, too!
WINDOW      ;$1A: set screen window
BOOT        ;$1B: load&run ML or autoboot a disk
FREAD#      ;$1C: read binary data
SPRDEF      ;$1D: define a sprite
FWRITE#     ;$1E: write binary data
DMA         ;$1F: access memory
EDMA        ;$21: Extended DMA
MEM         ;$23: access memory
OFF         ;$24: KEY OFF
FAST        ;$25: go to 2 MHz. mode
SPEED       ;$26: set CPU clock
TYPE        ;$27: type SEQ file
BVERIFY     ;$28: verify a saved program
ECTORY      ;$29: dirECTORY
ERASE       ;$2A: alias for scratch
FIND        ;$2B: find string
CHANGE      ;$2C: change string
SET         ;$2D: multi purpose
SCREEN      ;$2E: graphics settings
POLYGON     ;$2F: draw polygon
ELLIPSE     ;$30: draw elipse
VIEWPORT    ;$31: define drawing box
GCOPY       ;$32:
PEN         ;$33:
PALETTE     ;$34:
DMODE       ;$35:
DPAT        ;$36:
FORMAT      ;$37: HEADER
GENLOCK     ;$38:
FOREGROUND  ;$39:

BACKGROUND  ;$3B:
BORDER      ;$3C:
HIGHLIGHT   ;$3D:
MOUSE       ;$3E:
RMOUSE      ;$3F: return coordinates of mouse
DISK        ;$40:
CURSOR      ;$41:
RCURSOR     ;$42: return cursor position
LOADIFF     ;$43: load IFF picture from disk
SAVEIFF     ;$44: save IFF picture to   disk
EDIT        ;$45: Edit mode on/off
FONT        ;$46: ASCII switch
FGOTO       ;$47: FGOTO  expression
FGOSUB      ;$48: FGOSUB expression

prefix      ;$CE

POT         ;$02: return paddle value
BUMP        ;$03: read sprite collision
LPEN        ;$04: read light pen value
RSPPOS      ;$05: read sprite position
RSPRITE     ;$06: read sprite value
RSPCOLOR    ;$07: read sprite multicolor value
LOG10       ;$08: logarithm base 10
RWINDOW     ;$09: read window size
POINTER     ;$0a: return address of descriptor
MOD         ;$0b: modulus
PIXEL       ;$0c: return BP data at pixel
RPALETTE    ;$0d: return RGB component of color
RSPEED      ;$0e: return CPU clock
RPLAY       ;$0f: return voice status
--------

