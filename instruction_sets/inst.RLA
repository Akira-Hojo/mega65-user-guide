Rotate Left Memory, and AND with Accumulator (unintended instruction)
M $\leftarrow$ M$\ll$1, M(0) $\leftarrow$ C, C $\leftarrow$ M(7), A $\leftarrow$ A $AND$ M
N+Z+C+M+
This instruction shifts the contents
of the provided memory location one bit left.  Bit 0 will be
set to the current value of the Carry Flag, and the bit 7 will be shifted out into the Carry Flag
The result is then ANDed with the Accumulator.

\subsubsection*{Side effects}
\begin{itemize}
\item The N flag will be set if the result is negative, i.e. has it's most significant bit set, otherwise it will be cleared.
\item The Z flag will be set if the result is zero, otherwise it will be cleared.
\item The C flag will be set if bit 7 of the value was set, prior to being shifted.
\end{itemize}
